{"version":3,"file":"static/js/941.de03f238.chunk.js","mappings":"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","sources":["pages/Dashboard.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { axiosInstance } from \"../services/api\";\r\n\r\nconst Dashboard = () => {\r\n  const [selectedOption, setSelectedOption] = useState('groups');\r\n  const [rankings, setRankings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedOption === 'groups') {\r\n      fetchRankedGroups();\r\n    } else if (selectedOption === 'teams') {\r\n      fetchTopTeams();\r\n    } else {\r\n      fetchTopMembers();\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const fetchRankedGroups = async () => {\r\n    try {\r\n      const response = await axiosInstance.get('/ranked-groups');\r\n      setRankings(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching ranked groups:', err);\r\n    }\r\n  };\r\n\r\n  const fetchTopTeams = async () => {\r\n    try {\r\n      const response = await axiosInstance.get('/top-20-teams');\r\n      setRankings(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching top teams:', err);\r\n    }\r\n  };\r\n\r\n  const fetchTopMembers = async () => {\r\n    try {\r\n      const response = await axiosInstance.get('/top-20-members');\r\n      setRankings(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching top members:', err);\r\n    }\r\n  };\r\n\r\n  const getMedal = (rank) => {\r\n    switch (rank) {\r\n      case 1:\r\n        return 'ü•á'; // Gold Medal\r\n      case 2:\r\n        return 'ü•à'; // Silver Medal\r\n      case 3:\r\n        return 'ü•â'; // Bronze Medal\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-cyan-900 justify-center items-center h-screen\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">B·∫£ng X·∫øp H·∫°ng</h1>\r\n      <div className=\"mb-4\">\r\n        <button\r\n          className={`px-4 py-2 mr-2 ${selectedOption === 'groups' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\r\n          onClick={() => setSelectedOption('groups')}\r\n        >\r\n          Top ƒêV\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 mr-2 ${selectedOption === 'teams' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\r\n          onClick={() => setSelectedOption('teams')}\r\n        >\r\n          Top ƒê·ªôi\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 ${selectedOption === 'members' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\r\n          onClick={() => setSelectedOption('members')}\r\n        >\r\n          Top C√° Nh√¢n\r\n        </button>\r\n      </div>\r\n      <div className=\"overflow-x-auto bg-cyan-900 justify-center items-center h-screen\">\r\n        <table className=\"min-w-full bg-white border shadow-2xl font-[Poppins] border-2 border-cyan-200 w-6/12\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"px-4 py-3 border text-center bg-cyan-800\">X·∫øp H·∫°ng</th>\r\n              <th className=\"px-4 py-3 border text-center\r\n              bg-cyan-800\">{selectedOption === 'groups' ? 'T√™n ƒêV' : selectedOption === 'teams' ? 'T√™n ƒê·ªôi' : 'T√™n C√° Nh√¢n'}</th>\r\n              <th className=\"px-4 py-3 border text-center\r\n              bg-cyan-800\">{selectedOption === 'groups' || selectedOption === 'teams' ? 'ƒêi·ªÉm Trung B√¨nh' : 'T·ªïng ƒêi·ªÉm'}</th>\r\n              <th className=\"px-4 py-3 border text-center\r\n              bg-cyan-800\">Huy Ch∆∞∆°ng</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rankings.map((item, index) => (\r\n              <tr className=\"bg-cyan-200 hover:bg-cyan-100 hover:scale-105 cursor-pointer duration-300\" key={item._id}>\r\n                <td className=\"px-6 py-3 border text-center\">{index + 1}</td>\r\n                <td className=\"px-6 py-3 border text-center\">{selectedOption === 'groups' ? item.name : selectedOption === 'teams' ? item.name : item.name}</td>\r\n                <td className=\"px-6 py-3 border text-center\">{selectedOption === 'groups' || selectedOption === 'teams' ? item.avg_score : item.total_score}</td>\r\n                <td className=\"px-6 py-3 border text-center\">{getMedal(index + 1)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = \"http://14.225.255.42:5000\";\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(`${API_URL}/users/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport const logout = async (token) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/users/me/logout`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: `${API_URL}`, // Adjust baseURL as needed\r\n  timeout: 10000, // Adjust timeout as needed\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // Add any other headers needed (e.g., Authorization)\r\n  },\r\n});\r\n\r\n\r\n\r\n"],"names":["Dashboard","selectedOption","setSelectedOption","useState","rankings","setRankings","useEffect","fetchRankedGroups","fetchTopTeams","fetchTopMembers","async","response","axiosInstance","get","data","err","console","error","getMedal","rank","_jsxs","className","children","_jsx","concat","onClick","map","item","index","name","avg_score","total_score","_id","API_URL","login","axios","post","credentials","create","baseURL","timeout","headers"],"sourceRoot":""}