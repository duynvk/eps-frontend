{"version":3,"file":"static/js/719.01b1a0f7.chunk.js","mappings":"2PA2EA,QArEA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,GAAUC,EAAAA,EAAAA,MAchB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iEAAgEC,UAC7EF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iGAAgGC,UAC7GC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,EACxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,UACtCF,EAAAA,EAAAA,KAAA,OACE,cAAY,OACZC,UAAU,yCACVG,IAAKC,EACLC,IAAI,cAGRN,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wDAAuDC,UACrEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8DAA6DC,SAAC,6BAC3EN,IAASI,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAmBC,SAAEN,KAC5CO,EAAAA,EAAAA,MAAA,QAAMI,SA5BGC,UACnBC,EAAEC,iBACF,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAM,CAAErB,QAAOG,aACtCmB,aAAaC,QAAQ,QAASH,EAASI,OACvCjB,EAAQkB,KAAK,OACf,CAAE,MAAOC,GACPpB,EAAS,6BACTqB,QAAQtB,MAAMqB,EAChB,GAmBuCf,SAAA,EAC3BC,EAAAA,EAAAA,MAACgB,EAAAA,MAAK,CAAAjB,SAAA,EACJF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WACNF,EAAAA,EAAAA,KAAA,SACEC,UAAU,2OACVmB,KAAK,QACLC,YAAY,eACZC,MAAO/B,EACPgC,SAAWd,GAAMjB,EAASiB,EAAEe,OAAOF,OACnCG,UAAQ,QAGZtB,EAAAA,EAAAA,MAACgB,EAAAA,MAAK,CAAClB,UAAU,OAAMC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNF,EAAAA,EAAAA,KAAA,SACEC,UAAU,2OACVmB,KAAK,WACLC,YAAY,kBACZC,MAAO5B,EACP6B,SAAWd,GAAMd,EAAYc,EAAEe,OAAOF,OACtCG,UAAQ,QAGZzB,EAAAA,EAAAA,KAAC0B,EAAAA,OAAM,CAACzB,UAAU,OAAO0B,OAAK,EAACP,KAAK,SAAQlB,SAAC,yBAU7D,C,0DCvEA,MAAM0B,EAAU,4BAEHhB,EAAQJ,gBACIqB,EAAAA,EAAMC,KAAK,GAADC,OAAIH,EAAO,gBAAgBI,IAC5CC,KAoBLC,EAAgBL,EAAAA,EAAMM,OAAO,CACxCC,QAAQ,GAADL,OAAKH,GACZS,QAAS,IACTC,QAAS,CACP,eAAgB,qB","sources":["pages/Login.jsx","services/api.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Label, Button } from '@windmill/react-ui';\r\nimport { login } from '../services/api';\r\nimport ImageLight from '../assets/img/login-office.png';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await login({ email, password });\r\n      localStorage.setItem('token', response.token);\r\n      history.push('/app');\r\n    } catch (err) {\r\n      setError('Invalid email or password');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n          <div className=\"h-32 md:h-auto md:w-1/2\">\r\n            <img\r\n              aria-hidden=\"true\"\r\n              className=\"object-cover w-full h-full dark:hidden\"\r\n              src={ImageLight}\r\n              alt=\"Office\"\r\n            />\r\n          </div>\r\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n            <div className=\"w-full\">\r\n              <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">Đăng nhập</h1>\r\n              {error && <p className=\"mb-4 text-red-600\">{error}</p>}\r\n              <form onSubmit={handleSubmit}>\r\n                <Label>\r\n                  <span>Email</span>\r\n                  <input\r\n                    className=\"block w-full text-sm focus:outline-none dark:text-gray-300 form-input leading-5 focus:border-purple-400 dark:border-gray-600 focus:shadow-outline-purple dark:focus:border-gray-600 dark:focus:shadow-outline-gray dark:bg-gray-700 mt-1\"\r\n                    type=\"email\"\r\n                    placeholder=\"john@doe.com\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </Label>\r\n                <Label className=\"mt-4\">\r\n                  <span>Password</span>\r\n                  <input\r\n                    className=\"block w-full text-sm focus:outline-none dark:text-gray-300 form-input leading-5 focus:border-purple-400 dark:border-gray-600 focus:shadow-outline-purple dark:focus:border-gray-600 dark:focus:shadow-outline-gray dark:bg-gray-700 mt-1\"\r\n                    type=\"password\"\r\n                    placeholder=\"***************\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                  />\r\n                </Label>\r\n                <Button className=\"mt-4\" block type=\"submit\">\r\n                  Log in\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = \"http://14.225.255.42:5000\";\r\n\r\nexport const login = async (credentials) => {\r\n  const response = await axios.post(`${API_URL}/users/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nexport const logout = async (token) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_URL}/users/me/logout`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: `${API_URL}`, // Adjust baseURL as needed\r\n  timeout: 10000, // Adjust timeout as needed\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // Add any other headers needed (e.g., Authorization)\r\n  },\r\n});\r\n\r\n\r\n\r\n"],"names":["email","setEmail","useState","password","setPassword","error","setError","history","useHistory","_jsx","className","children","_jsxs","src","ImageLight","alt","onSubmit","async","e","preventDefault","response","login","localStorage","setItem","token","push","err","console","Label","type","placeholder","value","onChange","target","required","Button","block","API_URL","axios","post","concat","credentials","data","axiosInstance","create","baseURL","timeout","headers"],"sourceRoot":""}